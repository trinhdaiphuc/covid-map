{"version":3,"sources":["component/map/CovidGoogleMap.js","component/map/PatientInfo.js","component/map/PatientList.js","component/map/SeekBar.js","component/map/CovidDashboard.js","component/stats/StatsVN.js","component/stats/StatsGlobal.js","component/stats/StatsDashboard.js","component/navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["options","closeBoxURL","enableEventPropagation","CovidGoogleMap","onPatientMarkerClicked","center","patients","zoom","currentPatientIndex","googleMapsApiKey","mapContainerStyle","height","width","map","patient","index","key","position","lat","lng","onClick","className","name","PatientInfo","address","note","verifyDate","formatDate","moment","Date","format","memo","onPatientListClicked","totalListItem","length","patientsData","listRef","useRef","Row","data","style","item","isActive","newStyle","border","Button","variant","areEqual","useEffect","current","scrollToItem","id","ref","itemCount","itemSize","itemData","useStyles","makeStyles","root","padding","SeekBar","value","fromDate","toDate","onChange","maxValue","onAutoPlay","autoPlay","classes","marks","label","Typography","gutterBottom","Col","xs","IconButton","fontSize","color","Grid","container","spacing","Slider","step","valueLabel","rail","track","min","max","_event","newValue","aria-labelledby","valueLabelFormat","x","add","valueLabelDisplay","diff","compare","a","b","comparison","getPatientsBeforeDate","date","filter","CovidDashboard","useState","currentPatient","setCurrentPatient","setCurrentPatientIndex","setPatients","defaultPatients","setDefaultPatients","valueSeekBar","setValueSeekBar","setAutoPlay","currentCenter","patientClickedHandler","increaseSeekValue","useCallback","currentDate","getPatients","newInterval","setInterval","clearInterval","fetch","then","res","json","result","sortPatientsList","sort","Container","fluid","StatsVN","stroke","margin","top","right","left","bottom","strokeDasharray","dataKey","type","StatsGlobal","console","log","StatsDashboard","statsVN","setStatsVN","statsGlobal","setStatsGlobal","Object","keys","Nhiễm","Navigation","exact","activeClassName","to","App","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.aed9010b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { GoogleMap, LoadScript, Marker, InfoBox } from \"@react-google-maps/api\";\r\n\r\nconst options = { closeBoxURL: \"\", enableEventPropagation: true };\r\n\r\nconst CovidGoogleMap = ({\r\n  onPatientMarkerClicked,\r\n  center,\r\n  patients,\r\n  zoom,\r\n  currentPatientIndex,\r\n}) => {\r\n  const APIKey = \"AIzaSyBZolpm92zx6q9DIdM0xdo15AQuCkclyGs\";\r\n  return (\r\n    <LoadScript googleMapsApiKey={APIKey}>\r\n      <GoogleMap\r\n        mapContainerStyle={{\r\n          height: \"600px\",\r\n          width: \"100%\",\r\n        }}\r\n        zoom={zoom}\r\n        center={center}\r\n      >\r\n        {patients.map((patient, index) => (\r\n          <Marker\r\n            key={index}\r\n            position={{ lat: patient.lat, lng: patient.lng }}\r\n            onClick={() => {\r\n              onPatientMarkerClicked(patient, index);\r\n            }}\r\n          ></Marker>\r\n        ))}\r\n        {currentPatientIndex != null && (\r\n          <InfoBox position={center} options={options}>\r\n            <div className=\"info-box\">{patients[currentPatientIndex].name}</div>\r\n          </InfoBox>\r\n        )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default CovidGoogleMap;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst PatientInfo = ({ name, address, note, verifyDate }) => {\r\n  const newDate = moment(new Date(verifyDate));\r\n  const formatDate = newDate.format(\"DD/MM/YYYY\");\r\n  return (\r\n    <ul>\r\n      <li>Tên: {name}</li>\r\n      <li>Địa chỉ: {address}</li>\r\n      <li>Ghi chú: {note}</li>\r\n      <li>Ngày xác nhận: {formatDate}</li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PatientInfo;\r\n","import React, { useEffect, memo, useRef } from \"react\";\r\nimport { FixedSizeList as List, areEqual } from \"react-window\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst PatientList = ({ patients, onPatientListClicked, currentPatientIndex }) => {\r\n  const totalListItem = patients.length;\r\n  const patientsData = { patients, onPatientListClicked, currentPatientIndex };\r\n  const listRef = useRef();\r\n  const Row = memo(({ data, index, style }) => {\r\n    const { patients, onPatientListClicked, currentPatientIndex } = data;\r\n    const item = patients[index];\r\n    const isActive = index === currentPatientIndex ? \"primary\" : \"light\";\r\n    const newStyle = { ...style, border: `1px solid #000000` };\r\n    return (\r\n      <Button onClick={() => onPatientListClicked(item, index)} variant={isActive} style={newStyle}>\r\n        <div className=\"list-row\">{item.name}</div>\r\n      </Button>\r\n    );\r\n  }, areEqual);\r\n\r\n  useEffect(() => {\r\n    if (currentPatientIndex != null) {\r\n      listRef.current.scrollToItem(currentPatientIndex);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <h6>Danh sách bệnh nhân</h6>\r\n      <div id=\"list-component\">\r\n        <List\r\n          ref={listRef}\r\n          height={310}\r\n          itemCount={totalListItem}\r\n          itemSize={35}\r\n          width={\"100%\"}\r\n          itemData={patientsData}\r\n        >\r\n          {Row}\r\n        </List>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(PatientList);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport moment from \"moment\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    padding: \"60px 0px 0px 0px\",\r\n  },\r\n});\r\n\r\nconst SeekBar = ({\r\n  value,\r\n  fromDate,\r\n  toDate,\r\n  onChange,\r\n  maxValue,\r\n  onAutoPlay,\r\n  autoPlay,\r\n}) => {\r\n  const classes = useStyles();\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: moment(fromDate).format(\"DD/MM/YYYY\"),\r\n    },\r\n    {\r\n      value: maxValue,\r\n      label: moment(toDate).format(\"DD/MM/YYYY\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"continuous-slider\" gutterBottom>\r\n        Hiển thị danh sách bệnh nhân theo ngày\r\n      </Typography>\r\n      <Row>\r\n        <Col xs={2}>\r\n          <IconButton onClick={() => onAutoPlay()}>\r\n            {autoPlay ? (\r\n              <PauseIcon style={{ fontSize: 80, color: \"#3F51B5\" }}></PauseIcon>\r\n            ) : (\r\n              <PlayArrowIcon\r\n                style={{ fontSize: 80, color: \"#3F51B5\" }}\r\n              ></PlayArrowIcon>\r\n            )}\r\n          </IconButton>\r\n        </Col>\r\n        <Col xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs>\r\n              <Slider\r\n                step={1}\r\n                value={value ? value : 0}\r\n                classes={{\r\n                  valueLabel: \"value-label\",\r\n                  rail: \"rail\",\r\n                  track: \"track\",\r\n                }}\r\n                min={0}\r\n                max={maxValue}\r\n                onChange={(_event, newValue) => {\r\n                  onChange(newValue);\r\n                }}\r\n                aria-labelledby=\"continuous-slider\"\r\n                valueLabelFormat={(x) =>\r\n                  moment(fromDate).add(x, \"days\").format(\"DD/MM/YYYY\")\r\n                }\r\n                valueLabelDisplay=\"on\"\r\n                marks={marks}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeekBar;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CovidGoogleMap from \"./CovidGoogleMap\";\r\nimport PatientInfo from \"./PatientInfo\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PatientList from \"./PatientList\";\r\nimport SeekBar from \"./SeekBar\";\r\nimport moment from \"moment\";\r\n\r\nconst fromDate = new Date(\"12/8/2019\");\r\nconst toDate = new Date();\r\nconst maxValue = moment(toDate).diff(fromDate, \"days\");\r\n\r\nconst compare = (a, b) => {\r\n  let comparison = 0;\r\n  if (a.verifyDate > b.verifyDate) {\r\n    comparison = 1;\r\n  } else if (a.verifyDate < b.verifyDate) {\r\n    comparison = -1;\r\n  }\r\n  return comparison * -1;\r\n};\r\n\r\nconst getPatientsBeforeDate = (patients, date) => {\r\n  const newPatients = patients.filter(\r\n    (patient) => date.diff(patient.verifyDate, \"days\") > 0\r\n  );\r\n  return newPatients;\r\n};\r\n\r\nconst CovidDashboard = () => {\r\n  const [currentPatient, setCurrentPatient] = useState();\r\n  const [currentPatientIndex, setCurrentPatientIndex] = useState();\r\n  const [patients, setPatients] = useState([]);\r\n  const [defaultPatients, setDefaultPatients] = useState([]);\r\n  const [valueSeekBar, setValueSeekBar] = useState(0);\r\n  const [autoPlay, setAutoPlay] = useState(false);\r\n  const defaultCenter = { lat: 16.047079, lng: 108.20623 };\r\n\r\n  const currentCenter = currentPatient\r\n    ? { lat: currentPatient.lat, lng: currentPatient.lng }\r\n    : defaultCenter;\r\n  const zoom = currentPatient ? 12 : 6;\r\n\r\n  const patientClickedHandler = (patient, index) => {\r\n    setAutoPlay(false);\r\n    setCurrentPatient(patient);\r\n    setCurrentPatientIndex(index);\r\n  };\r\n\r\n  const increaseSeekValue = useCallback(() => {\r\n    const currentDate = moment(fromDate).add(valueSeekBar, \"days\");\r\n    const getPatients = getPatientsBeforeDate(defaultPatients, currentDate);\r\n    setPatients(getPatients);\r\n    setCurrentPatient(null);\r\n    setCurrentPatientIndex(null);\r\n    setValueSeekBar(valueSeekBar + 1);\r\n  }, [valueSeekBar, defaultPatients]);\r\n\r\n  const onChangeSeekBarHandler = (newValue) => {\r\n    setAutoPlay(false);\r\n    setValueSeekBar(newValue);\r\n    const currentDate = moment(fromDate).add(newValue, \"days\");\r\n    const getPatients = getPatientsBeforeDate(defaultPatients, currentDate);\r\n    setPatients(getPatients);\r\n    setCurrentPatient(null);\r\n    setCurrentPatientIndex(null);\r\n  };\r\n\r\n  const onAutoPlay = () => {\r\n    setAutoPlay(!autoPlay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (autoPlay) {\r\n      const newInterval = setInterval(increaseSeekValue, 500);\r\n      return () => {\r\n        clearInterval(newInterval);\r\n      };\r\n    }\r\n  }, [autoPlay, increaseSeekValue]);\r\n\r\n  useEffect(() => {\r\n    if (valueSeekBar > maxValue) {\r\n      setValueSeekBar(maxValue);\r\n      setAutoPlay(false);\r\n    }\r\n  }, [valueSeekBar]);\r\n\r\n  useEffect(() => {\r\n    const url =\r\n      \"https://cors-anywhere.herokuapp.com/https://maps.vnpost.vn/apps/covid19/api/patientapi/list\";\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const sortPatientsList = result.data.sort(compare);\r\n        setDefaultPatients(sortPatientsList);\r\n        const getPatients = getPatientsBeforeDate(\r\n          sortPatientsList,\r\n          moment(fromDate)\r\n        );\r\n        setPatients(getPatients);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"covid-dashboard\">\r\n      <h5>THÔNG TIN ĐIỂM ĐẾN CỦA CÁC CA DƯƠNG TÍNH VỚI SARS-CoV-2</h5>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xs={8}>\r\n            <CovidGoogleMap\r\n              onPatientMarkerClicked={patientClickedHandler}\r\n              center={currentCenter}\r\n              patients={patients}\r\n              zoom={zoom}\r\n              currentPatientIndex={currentPatientIndex}\r\n            />\r\n          </Col>\r\n\r\n          <Col xs={4}>\r\n            <Row id=\"patient-info\">\r\n              <h6>Thông tin bệnh nhân</h6>\r\n              <div>\r\n                {currentPatient && (\r\n                  <PatientInfo\r\n                    name={currentPatient.name}\r\n                    address={currentPatient.address}\r\n                    note={currentPatient.note}\r\n                    verifyDate={currentPatient.verifyDate}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <PatientList\r\n                patients={patients}\r\n                onPatientListClicked={patientClickedHandler}\r\n                currentPatientIndex={currentPatientIndex}\r\n              />\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <SeekBar\r\n          fromDate={fromDate}\r\n          toDate={toDate}\r\n          value={valueSeekBar}\r\n          maxValue={maxValue}\r\n          onChange={onChangeSeekBarHandler}\r\n          onAutoPlay={onAutoPlay}\r\n          autoPlay={autoPlay}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CovidDashboard;\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst StatsVN = ({ data, stroke }) => {\r\n  return (\r\n    <div className=\"stats\">\r\n      <h6>\r\n        Biểu đồ số ca mắc mới, số ca nghi nhiễm, số ca khỏi theo thời gian Việt\r\n        Nam\r\n      </h6>\r\n      <LineChart\r\n        width={600}\r\n        height={400}\r\n        data={data}\r\n        margin={{\r\n          top: 5,\r\n          right: 5,\r\n          left: 0,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"2 2\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"Nhiễm\" stroke={stroke[0]} />\r\n        <Line type=\"monotone\" dataKey=\"Nghi Nhiễm\" stroke={stroke[1]} />\r\n        <Line type=\"monotone\" dataKey=\"Bình phục\" stroke={stroke[2]} />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsVN;\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst StatsGlobal = ({ data, stroke }) => {\r\n  console.log(\"[INFO}:::: StatsGlobal -> stroke\", stroke);\r\n  return (\r\n    <div className=\"stats\">\r\n      <h6>Biểu đồ số ca mắc mới, số ca tử vong, số ca khỏi theo thời gian Thế giới</h6>\r\n      <LineChart\r\n        width={600}\r\n        height={400}\r\n        data={data}\r\n        margin={{\r\n          top: 5,\r\n          right: 5,\r\n          left: 25,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"2 2\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"Nhiễm\" stroke={stroke[0]} />\r\n        <Line type=\"monotone\" dataKey=\"Tử vong\" stroke={stroke[1]} />\r\n        <Line type=\"monotone\" dataKey=\"Bình phục\" stroke={stroke[3]} />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsGlobal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport StatsVN from \"./StatsVN\";\r\nimport StatsGlobal from \"./StatsGlobal\";\r\n\r\nconst formatDataVN = (data) => {\r\n  const arr = Object.keys(data).map((key) => {\r\n    return {\r\n      date: key,\r\n      Nhiễm: data[key][0],\r\n      \"Nghi Nhiễm\": data[key][1],\r\n      \"Bình phục\": data[key][2],\r\n    };\r\n  });\r\n  return arr;\r\n};\r\n\r\nconst formatDataGlobal = (data) => {\r\n  const arr = Object.keys(data).map((key) => {\r\n    return {\r\n      date: key,\r\n      Nhiễm: data[key][0],\r\n      \"Tử vong\": data[key][1],\r\n      \"Bình phục\": data[key][2],\r\n    };\r\n  });\r\n  return arr;\r\n};\r\n\r\nconst StatsDashboard = () => {\r\n  const [statsVN, setStatsVN] = useState([]);\r\n  console.log(\"[INFO}:::: StatsDashboard -> statsVN\", statsVN);\r\n  const [statsGlobal, setStatsGlobal] = useState([]);\r\n  console.log(\"[INFO}:::: statsGlobal\", statsGlobal);\r\n  const stroke1 = \"#C44444\";\r\n  const stroke2 = \"#66BB6A\";\r\n  const stroke3 = \"#F7862D\";\r\n\r\n  useEffect(() => {\r\n    const urlStatsGlobal = \"https://td.fpt.ai/corona/corona-total.json\";\r\n    fetch(urlStatsGlobal)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setStatsGlobal(formatDataGlobal(result));\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const urlStatsVN = \"https://td.fpt.ai/corona/corona-chart-vn.json\";\r\n    fetch(urlStatsVN)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setStatsVN(formatDataVN(result));\r\n      });\r\n  }, []);\r\n  return (\r\n    <div id=\"covid-stats\">\r\n      <Container fluid>\r\n        <h5>\r\n          Biểu đồ thống kê số ca mắc, nghi nhiễm, bình phục, tử vong của Việt\r\n          Nam và thế giới\r\n        </h5>\r\n\r\n        <Row>\r\n          <Col xs={6}>\r\n            <StatsVN data={statsVN} stroke={[stroke1, stroke2, stroke3]} />\r\n          </Col>\r\n          <Col xs={6}>\r\n            <StatsGlobal\r\n              data={statsGlobal}\r\n              stroke={[stroke1, stroke2, stroke3]}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsDashboard;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Container fluid>\r\n      <nav className=\"navbar\">\r\n        <NavLink\r\n          exact\r\n          activeClassName=\"navbar__link--active\"\r\n          className=\"navbar__link\"\r\n          to=\"/map\"\r\n        >\r\n          Bản đồ Việt Nam\r\n        </NavLink>\r\n        <NavLink\r\n          activeClassName=\"navbar__link--active\"\r\n          className=\"navbar__link\"\r\n          to=\"/stats\"\r\n        >\r\n          Đồ thị số ca mắc Covid\r\n        </NavLink>\r\n      </nav>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport CovidDashboard from \"./component/map/CovidDashboard\";\r\nimport StatsDashboard from \"./component/stats/StatsDashboard\";\r\nimport Navigation from \"./component/navigation/Navigation\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation />\r\n      <Switch>\r\n        <Route exact path=\"/map\" component={CovidDashboard} />\r\n        <Route exact path=\"/stats\" component={StatsDashboard} />\r\n        <Route path=\"/\" component={CovidDashboard} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}